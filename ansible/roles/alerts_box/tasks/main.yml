---
- name: make sure alertmanager directories are present
  become: true
  file:
    path: "{{ containers_basedir }}/{{ ansible_role_name }}/{{ item.path }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "alertmanager", user: "root", group: "root", mode: "0755" }
    - { path: "alertmanager/data", user: "65534", group: "65534", mode: "0755" }

- name: make sure grafana directories are present
  become: true
  file:
    path: "{{ containers_basedir }}/{{ ansible_role_name }}/{{ item.path }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "grafana", user: "root", group: "root", mode: "0755" }
    - { path: "grafana/provisioning/dashboards", user: "root", group: "root", mode: "0755" }
    - { path: "grafana/provisioning/datasources", user: "root", group: "root", mode: "0755" }
    - { path: "grafana/provisioning/notifiers", user: "root", group: "root", mode: "0755" }
    - { path: "grafana/data", user: "472", group: "root", mode: "0755" }

- name: make sure loki directories are present
  become: true
  file:
    path: "{{ containers_basedir }}/{{ ansible_role_name }}/{{ item.path }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "loki", user: "root", group: "root", mode: "0755" }
    - { path: "loki/data", user: "10001", group: "10001", mode: "0755" }
    - { path: "loki/rules", user: "10001", group: "10001", mode: "0755" }
    # very strange bug in Grafana's unified alerting
    - { path: "loki/rules/fake", user: "10001", group: "10001", mode: "0755" }

- name: make sure prometheus directories are present
  become: true
  file:
    path: "{{ containers_basedir }}/{{ ansible_role_name }}/{{ item.path }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "prometheus", user: "root", group: "root", mode: "0755" }
    - { path: "prometheus/conf.d", user: "root", group: "root", mode: "0755" }
    - { path: "prometheus/data", user: "65534", group: "65534", mode: "0755" }
    - { path: "prometheus/rules", user: "root", group: "root", mode: "0755" }

- name: make sure traefik directories are present
  become: true
  file:
    path: "{{ containers_basedir }}/{{ ansible_role_name }}/{{ item.path }}"
    state: directory
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: "traefik/data", user: "root", group: "root", mode: "0755" }
    - { path: "traefik/certs", user: "root", group: "root", mode: "0750" }

- name: generate alertmanager configuration
  become: true
  template:
    src: "alertmanager.yml.j2"
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/alertmanager/alertmanager.yml"
    owner: root
    group: root
    mode: 0644
  notify: restart alertmanager container

- name: generate grafana datasources configuration
  become: true
  template:
    src: grafana-datasources.yml.j2
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/grafana/provisioning/datasources/default.yml"
    owner: root
    group: root
    mode: 0644
  notify: restart grafana container

- name: generate grafana dashboards configuration
  become: true
  template:
    src: grafana-dashboards.yml.j2
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/grafana/provisioning/dashboards/default.yml"
    owner: root
    group: root
    mode: 0644
  notify: restart grafana container

- name: copy common grafana dashboards
  become: true
  copy:
    src: "{{ item }}"
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/grafana/provisioning/dashboards/"
    owner: root
    group: root
    mode: 0444
  with_fileglob:
    - "files/dashboards/*.json"

- name: generate prometheus configuration
  become: true
  template:
    src: prometheus.yml.j2
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/prometheus/prometheus.yml"
    owner: root
    group: root
    mode: 0644
  notify: restart prometheus container

- name: generate loki configurations
  become: true
  template:
    src: loki.yml.j2
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/loki/loki.yml"
    owner: root
    group: root
    mode: 0644
  notify: restart loki container

- name: generate prometheus rules and tests
  become: true
  copy:
    src: "{{ item }}"
    dest: "{{ containers_basedir }}/{{ ansible_role_name }}/prometheus/rules/{{ item | basename }}"
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - "files/prometheus_rules/*"
  notify: restart prometheus container

- name: make sure docker compose directory exists
  become: true
  file:
    path: "/etc/docker-compose/{{ alerts_box_compose_project }}"
    state: directory
    mode: 0750

- name: generate docker compose file
  become: true
  template:
    src: docker-compose.yml.j2
    dest: "/etc/docker-compose/{{ alerts_box_compose_project }}/docker-compose.yml"
    mode: 0640

- name: run the containers
  become: true
  community.docker.docker_compose:
    timeout: 300
    project_src: "/etc/docker-compose/{{ alerts_box_compose_project }}/"
    pull: "{{ docker_pull }}"
    build: false
    state: present
    project_name: "{{ alerts_box_compose_project }}"
  register: alerts_box_docker_results
  until: alerts_box_docker_results is success
  retries: "{{ compose_retries }}"
  delay: "{{ compose_retries_delay_sec }}"
  notify:
    - wait
